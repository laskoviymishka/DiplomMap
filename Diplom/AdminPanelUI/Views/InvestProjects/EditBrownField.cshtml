@using AdminPanelUI.Models
@model Invest.Common.Model.BrownField
@{
    IList<SelectListItem> temp = new List<SelectListItem>();
    SelectListItem selected = new SelectListItem();
    foreach (RegionDropDownViewModel items in ViewBag.Region)
    {
        SelectListItem item = new SelectListItem();
        item.Text = items.Name;
        item.Value = items.Name;
        if (Model.Region == items.Name)
        {
            item.Selected = true;
        }
        selected = item;
        temp.Add(item);
    }
    SelectList selectedList = new SelectList(temp,"Text", "Value",selected);
    var test = selectedList.SelectedValue;
}

<script type="text/javascript">
    var map;
    function CheckAddress(e) {
        GMaps.geocode({
            address: $('#AddressName').val().trim(),
            callback: function (results, status) {
                if (status == 'OK') {
                    var latlng = results[0].geometry.location;
                    map.removeMarkers()
                    map.setCenter(latlng.lat(), latlng.lng());
                    map.setZoom(13);
                    map.addMarker({
                        lat: latlng.lat(),
                        lng: latlng.lng()
                    });
                    document.getElementById('Address_Lat').value = latlng.lat().toString();
                    document.getElementById('Address_Lng').value = latlng.lng().toString();
                }
            }
        });
    };

    $(document).ready(function () {
        map = new GMaps({
            el: '#map',
            lat: 53.6,
            lng: 30.623333,
            zoom: 8
        });

        GMaps.on('click', map.map, function (event) {
            var index = map.markers.length;
            var lat = event.latLng.lat();
            var lng = event.latLng.lng();
            document.getElementById('Address_Lat').value = lat.toString();
            document.getElementById('Address_Lng').value = lng.toString();
            map.removeMarkers()
            map.setCenter(lat, lng);
            map.addMarker({
                lat: lat,
                lng: lng
            });
        });
    });
</script>
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <fieldset>
        <div style="visibility: hidden">
            @Html.EditorFor(model => model._id)
        </div>
        <legend>BrownField - вложение в существующие производства</legend>
        <table class="table table-striped table-condensed">
            <tr>
                <td>Название проекта</td>
                <td>@Html.EditorFor(model => model.Name)
                    @Html.ValidationMessageFor(model => model.Name)</td>
            </tr>
            <tr>
                <td>Описание проекта</td>
                <td>@Html.TextAreaFor(model => model.Description)
                    @Html.ValidationMessageFor(model => model.Description)</td>
            </tr>
            <tr>
                <td>Дата регистрации проекта</td>
                <td>@Html.EditorFor(model => model.RegistrationDate)
                    @Html.ValidationMessageFor(model => model.RegistrationDate)</td>
            </tr>
            <tr>
                <td>Дата сдачи проекта</td>
                <td>@Html.EditorFor(model => model.EstimateRelease)
                    @Html.ValidationMessageFor(model => model.EstimateRelease)</td>
            </tr>
            <tr>
                <td>Объем инвестиций</td>
                <td>@Html.EditorFor(model => model.InvestAmount)
                    @Html.ValidationMessageFor(model => model.InvestAmount) млрд. руб.</td>
            </tr>
            <tr>
                <td>Создаваемые рабочие места</td>
                <td>@Html.EditorFor(model => model.WorkPlaces)
                    @Html.ValidationMessageFor(model => model.WorkPlaces)</td>
            </tr>
            <tr>
                <td>Контакт</td>
                <td>@Html.EditorFor(model => model.Contact)
                    @Html.ValidationMessageFor(model => model.Contact)
                    @Html.ValidationMessageFor(model => model.Region)</td>
            </tr>
            <tr>
                <td>Регион</td>
                <td> @Html.DropDownListFor(d => d.Region, selectedList, Model.Region,new object{})
                    @Html.ValidationMessageFor(model => model.Region)</td>

            </tr>
            <tr>
                <td>Примечания</td>
                <td>@Html.EditorFor(model => model.Appendix)
                    @Html.ValidationMessageFor(model => model.Appendix)</td>
            </tr>
            <tr>
                <td>Аддресс</td>
                <td>@Html.EditorFor(model => model.AddressName)
                    @Html.ValidationMessageFor(model => model.AddressName)
                    <span class="btn" onclick="CheckAddress()">Проверить адресс</span>
                    <div class="editor-label">
                        Координаты
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.Address.Lat)
                        @Html.ValidationMessageFor(model => model.Address.Lat)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.Address.Lng)
                        @Html.ValidationMessageFor(model => model.Address.Lng)
                    </div>
                </td>
            </tr>
        </table>

        <p>
            <input class="btn btn-info" type="submit" value="Сохранить изменения" />
        </p>
    </fieldset>
}
<div class="row">
    <div class="span11">
        <div style="height: 550px; width:750px">
            <div id="map" style="height: 100%"></div>
        </div>
    </div>
</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

