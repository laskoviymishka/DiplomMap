@model Invest.Common.Model.ProjectModels.Task
@{
    ViewBag.Title = "Редактировать инфомацию о задаче";
}
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Редактировать инфомацию о задаче</legend>
        @Html.HiddenFor(model => model._id)
        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @{
    Model.Description = Server.HtmlDecode(Model.Description);
            }
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Description, new { @style = "width:100%", @id = "editor" })
            @Html.ValidationMessageFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.HiddenFor(model => model.CompletedOn)
        </div>
        @if (Model.SubTask == null || !Model.SubTask.Any())
        {
            <div class="editor-label">
                @Html.LabelFor(model => model.Milestone)
            </div>
            <div class="editor-field">
                <div id="datepicker" class="input-control text">
                    <input class="t-input"
                        data-val="true"
                        data-val-date="Ожидаемая дата прохождения контрольной точки должна быть датой."
                        data-val-required="Требуется поле Ожидаемая дата прохождения контрольной точки."
                        id="Milestone"
                        name="Milestone"
                        type="text"
                        value="">
                    <button class="btn-date"></button>
                </div>
                @Html.ValidationMessageFor(model => model.Milestone)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.IsComplete)
            </div>
            <div class="editor-field">
                @Html.DisplayFor(model => model.IsComplete)
                @Html.ValidationMessageFor(model => model.IsComplete)
            </div>
        }
        else
        {
            <div class="editor-field">
                @Html.DisplayFor(model => model.Milestone)
                @Html.ValidationMessageFor(model => model.Milestone)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.IsComplete)
            </div>
            <div class="editor-field">
                @Html.DisplayFor(model => model.IsComplete)
                @Html.ValidationMessageFor(model => model.IsComplete)
            </div>
        }
        <div class="editor-label">
            @Html.LabelFor(model => model.IsVerifiedComplete)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.IsVerifiedComplete)
            @Html.ValidationMessageFor(model => model.IsVerifiedComplete)
        </div>
        <p>
            <input type="submit" value="Сохранить" />
        </p>
    </fieldset>
}
<div>
    @if (Model.SubTask != null && Model.SubTask.Any())
    {
        Html.ActionLink("К дорожной карте проекта", "PlanForProject", new { id = ViewBag.ProjectId });
        Html.ActionLink("К моим задачам", "MyTask");
    }
    else
    {
        Html.ActionLink("Дополнительная информация о задаче", "AdditionalInfo", new { taskId = Model._id, projectId = ViewBag.ProjectId });
        Html.ActionLink("Редакировать", "TaskEdit", new { taskId = Model._id, projectId = ViewBag.ProjectId });
        Html.ActionLink("К дорожной карте проекта", "PlanForProject", new { id = ViewBag.ProjectId });
        Html.ActionLink("К моим задачам", "MyTask");
    }
</div>
<script>
    $("#datepicker").datepicker({
        effect: "slide", // none, slide, fade
        position: "bottom", // top or bottom
        format: "dd/mm/yyyy",
    });
    $(document).ready(function () { $("#editor").cleditor(); });
</script>
