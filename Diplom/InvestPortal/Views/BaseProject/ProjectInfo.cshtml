@using Invest.Common.Model.ProjectModels
@model Project
<fieldset style="height: 100%">
    <legend>Информация о проекте</legend>
    <div class="display-label">
        @Html.DisplayNameFor(model => model.Name)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Name)
    </div>
    <div class="display-label">
        @Html.DisplayNameFor(model => model.Description)
    </div>
    <div class="display-field">
        @Html.Raw(HttpUtility.HtmlDecode(Model.Description))
    </div>
    <div class="display-label">
        @Html.DisplayNameFor(model => model.AddressName)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.AddressName)
    </div>
    <div class="display-label">
        @Html.DisplayNameFor(model => model.Contact)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Contact)
    </div>
    <div class="display-label">
        @Html.DisplayNameFor(model => model.Region)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Region)
    </div>
    <div class="display-label">
        @Html.DisplayNameFor(model => model.AssignUser)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.AssignUser)
    </div>
    <div class="display-label">
        @Html.DisplayNameFor(model => model.InvestorUser)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.InvestorUser)
    </div>
    <div class="display-label">
        @Html.DisplayNameFor(model => model.ProjectType)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.ProjectType)
    </div>
    @if (Model.Tasks != null && Model.Tasks.Any())
    {
        <h3>
            Дорожная карта проекта @Model.Name</h3>
        @Html.Telerik().TreeView().Name("TreeView").BindTo(Model.Tasks, mapping => mapping.For<Task>(binding => binding.ItemDataBound((item, task) =>
   {
       item.Text = task.Title;
       item.Value = task._id;
   }).Children(t => t.SubTask))).ExpandAll(true)
    }
    @if (Model.Responses != null && Model.Responses.Any())
    {
        <h3>
            Отклики от инвесторов на проекта @Model.Name</h3>
        foreach (InvestorResponse investorResponse in Model.Responses)
        {
        <fieldset>
            <div class="editor-label">
                @Html.LabelFor(model => investorResponse.ResponseDate)
            </div>
            <div class="editor-field">
                @Html.DisplayFor(model => investorResponse.ResponseDate)
                @Html.ValidationMessageFor(model => investorResponse.ResponseDate)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => investorResponse.InvestorFirstName)
            </div>
            <div class="editor-field">
                @Html.DisplayFor(model => investorResponse.InvestorFirstName)
                @Html.ValidationMessageFor(model => investorResponse.InvestorFirstName)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => investorResponse.InvestorMiddleName)
            </div>
            <div class="editor-field">
                @Html.DisplayFor(model => investorResponse.InvestorMiddleName)
                @Html.ValidationMessageFor(model => investorResponse.InvestorMiddleName)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => investorResponse.InvestorLastName)
            </div>
            <div class="editor-field">
                @Html.DisplayFor(model => investorResponse.InvestorLastName)
                @Html.ValidationMessageFor(model => investorResponse.InvestorLastName)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => investorResponse.InvestorOrganizationName)
            </div>
            <div class="editor-field">
                @Html.DisplayFor(model => investorResponse.InvestorOrganizationName)
                @Html.ValidationMessageFor(model => investorResponse.InvestorOrganizationName)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => investorResponse.InvestorEmail)
            </div>
            <div class="editor-field">
                @Html.DisplayFor(model => investorResponse.InvestorEmail)
                @Html.ValidationMessageFor(model => investorResponse.InvestorEmail)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => investorResponse.InvestorPhone)
            </div>
            <div class="editor-field">
                @Html.DisplayFor(model => investorResponse.InvestorPhone)
                @Html.ValidationMessageFor(model => investorResponse.InvestorPhone)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => investorResponse.AdditionalInfo)
            </div>
            <div class="editor-field">
                @Html.DisplayFor(model => investorResponse.AdditionalInfo)
                @Html.ValidationMessageFor(model => investorResponse.AdditionalInfo)
            </div>
        </fieldset>
        }
    }
    @if (Model.Notes != null && Model.Notes.Any())
    {
        <table>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Notes.ToList()[0].NoteTitle)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Notes.ToList()[0].NoteBody)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Notes.ToList()[0].CretorName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Notes.ToList()[0].CreatedTime)
                </th>
            </tr>
            @foreach (var item in Model.Notes)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item._id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProjectId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NoteTitle)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NoteBody)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CretorName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreatedTime)
                    </td>
                </tr>
            }
        </table>
    }
</fieldset>
