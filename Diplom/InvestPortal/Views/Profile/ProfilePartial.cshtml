@model Invest.Common.Model.Common.PortalNotification
<div>@User.Identity.Name</div>
<script src="../../Scripts/2013.2.611/telerik.panelbar.min.js" type="text/javascript"></script>
@if (User.Identity.IsAuthenticated)
{
    Html.Telerik().PanelBar().Name("PanelBar").HtmlAttributes(new { style = "width: 99%; float: left; margin-bottom: 30px;" }).ExpandMode(PanelBarExpandMode.Multiple).SelectedIndex(0).Items(item =>
        {
            if (User.IsInRole("Investor"))
            {
                item.Add()
                    .Text("Мои отчеты")
                    .Items(subItem =>
                        {
                            subItem.Add().Text("Все отчеты").Url("/Report/");
                        }
                    );
            }
            else
            {
                item.Add()
                    .Text("Мои отчеты")
                    .Items(subItem =>
                        {
                            subItem.Add().Text("Все отчеты").Url("/ReportReview/");
                        }
                    );
            }
            item.Add()
                .Text("Мои проекты")
                .Items(subItem =>
                    {
                        subItem.Add().Text("Мои на проекты").Url("/BaseProject/");
                        if (User.IsInRole("Admin"))
                        {
                            subItem.Add().Text("Отклики на проекты").Url("/BaseProject/VerifyResponse");
                            subItem.Add().Text("Назначение ответственных").Url("/UserManager/UnUsignedProject");
                        }
                        subItem.Add().Text("Greenfield проекты").Url("/GreenField/");
                        subItem.Add().Text("Все проекты").Url("/BaseProject/All");
                    }
                );
            item.Add()
                .Text("Уведомление")
                .Items(subItem =>
                    {
                        subItem.Add()
                                .Text(string.Format("Новые уведомелния {0}", Model.UnReadNotification)).Url("/Notification/");
                        subItem.Add()
                                .Text("Все уведомления").Url("/Notification/All");
                        subItem.Add()
                               .Text("Все сообщения").Url("/Message/");
                        subItem.Add()
                               .Text("Непрочитанные сообщения " + Model.UnreadMessages).Url("/Message/Unreaded");
                        subItem.Add()
                                .Text("Отправленные сообщения").Url("/Message/Sent");
                        subItem.Add()
                               .Text("Не отправленные сообщения").Url("/Message/Draft");
                        subItem.Add()
                                .Text("Отправленные непрочитанные сообщения").Url("/Message/UnreadedSent");
                    }
                );
            item.Add()
                .Text("Задачи")
                .Items((subItem) =>
                    {
                        subItem.Add()
                               .Text("Мои задачи").Url("/Task/MyTask");
                        subItem.Add()
                               .Text("Общие задачи");
                        subItem.Add()
                               .Text(string.Format("Активно {0}, просроченно {1}", Model.ActiveTask, Model.PendingTask)).Url("/Task/ActiveTask");
                        subItem.Add()
                               .Text(string.Format("Выполнено {0}, просроченно {1}", Model.CompleteTask, Model.PendingCompleteTask)).Url("/Task/CompleteTask");
                    });
            item.Add()
                .Text("Пометки")
                .Items((subItem) =>
                    {
                        subItem.Add()
                               .Text("Мои пометки").Url("/Notes/All");
                    });
        }).ExpandAll(true).Render();
}
else
{

    Html.RenderAction("Login", "Account");
}
